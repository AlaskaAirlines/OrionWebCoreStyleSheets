// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

/// Creates Sass variable or custom property output for multi-use tab shape
/// @group utility-mixins
/// @param {string} $style [] - Specifies the style type (sass, css)
/// @param {string} $env [] - Specifies the style environment (component, noncomponent)
/// @example scss - import mixin file
///   @import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/utilityMixins/anchor-roleTab";
/// @example scss - Set properties for Sass output that is NOT within a component
///   .ods-roleTab {
///      @include anchorTab(sass, noncomponent);
///   }
/// @example scss - Set properties for CSS output that IS within a component
///   .hyperlink--tab {
///       @include anchorTab(css, component)
///   }
@mixin anchorTab($style, $env) {
  $color: null;
  $border-color: null;
  $padding: null;
  $hover-color: null;
  $isactive-color: null;

  @if $style == css {
    $color: var(--color-type-theme-light-link);
    $border-color: var(--color-background-light-rule);
    $padding: var(--size-scale-med);
    $hover-color: var(--color-type-theme-light-link-hover);
    $isactive-color: var(--color-base-orca);

  } @else if $style == sass {
    $color: $color-type-theme-light-link;
    $border-color: $color-background-light-rule;
    $padding: $size-scale-med;
    $hover-color: $color-type-theme-light-link-hover;
    $isactive-color: $color-base-orca;

  } @else {
    @error "Invalid $style option. Please use `css` or `sass`";
  }

  color: $color;
  border-color: $border-color;
  padding: $size-scale-med;
  border-width: 0 0 1px 0;
  border-style: solid;

  @if $env == component {
    :host(:not(.is-touching)) & {
      &:hover {
        border-width: 0 0 2px 0;
        text-decoration: none;
        cursor: pointer;

        color: $hover-color;
        border-color: currentColor;
      }
    }
  } @else if $env == noncomponent {
    &:not(.is-touching) {
      &:hover {
        border-width: 0 0 2px 0;
        text-decoration: none;
        cursor: pointer;

        color: $hover-color;
        border-color: currentColor;
      }
    }
  } @else {
    @error "Invalid $env option. Please use `component` or `noncomponent`";
  }

  &.is-active {
    border-width: 0 0 2px 0;
    text-decoration: none;
    cursor: pointer;

    color: $isactive-color;
    border-color: currentColor;
  }
}
